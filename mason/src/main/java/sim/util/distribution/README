This is a package of distributions, drawn from the CERN distribution collection.

Each distribution is represented by a class, which you instantiate by passing
in certain parameters appropriate to the distribution, plus a MersenneTwisterFast
random number generator (you probably should use the variable "random" from your
SimState subclass).

All distributions are one of two kinds:

	AbstractDiscreteDistribution	(distributions over the integers)
	AbstractContinuousDistribution	(distributions over the reals)

These two superclasses are in turn subclasses of AbstractDistribution.

AbstractContinuousDistribution sublasses override the method nextDouble(),
which returns a random real-valued number drawn from the distribution.

AbstractDiscreteDistribution subclasses override a method nextInt(),
which returns a random integer drawn from from the distribution.  These
classes also override nextDouble(), but just have it call nextInt().

There are also several utility classes:

SCALE.JAVA
A helpful utility for converting one distribution into another by multiplying
it by a constant and adding a constant.

DISTRIBUTION.JAVA
Each distribution has its own class.  Some distribution classess are stateful
and actually require instances; but others are just simple stubs that in turn
call an equivalent static method in the Distributions.java class.

FUN.JAVA
Utility functions for the distributions to use.
You can ignore this.

CONSTANTS.JAVA
A collection of constants for the distributions to use.
You can ignore this.

PROBABILITY.JAVA
More utility functions for the distributions to use.
You can ignore this.

POLYNOMIAL.JAVA
More constants.
You can ignore this.
